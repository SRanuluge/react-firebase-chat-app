{"version":3,"sources":["components/SignOut.js","components/SignIn.js","components/ChatMessage.js","components/ChatRoom.js","App.js","reportWebVitals.js","index.js"],"names":["SignOut","auth","currentUser","Button","size","variant","color","onClick","signOut","SignIn","signInWithGoogle","classes","useStyles","className","containerStyle","makeStyles","alignSelf","marginTop","ChatMessage","props","firebase","message","text","uid","photoURL","messageClass","containersent","containerreceived","src","textStyle","backgroundColor","padding","display","flexDirection","alignItems","ChatRoom","messagesRef","firestore","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","value","setValue","dummy","useRef","sendMessage","e","a","preventDefault","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","ref","Container","maxWidth","formStyle","onSubmit","TextField","inputProps","placeholder","formInput","onChange","target","disabled","type","bottom","paddingRight","position","width","justifyContent","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useAuthState","user","Fragment","container","AppBar","headerStyle","Toolbar","secStyle","secSignStyle","provider","GoogleAuthProvider","signInWithPopup","minHeight","paddingTop","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9b4e194.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction SignOut({ auth }) {\r\n  return (\r\n    !!auth &&\r\n    auth.currentUser && (\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n        color=\"inherit\"\r\n        onClick={() => auth.signOut()}\r\n      >\r\n        Sign Out\r\n      </Button>\r\n    )\r\n  );\r\n}\r\n\r\nexport default SignOut;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nfunction SignIn({ signInWithGoogle }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      className={classes.containerStyle}\r\n      size=\"large\"\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={signInWithGoogle}\r\n    >\r\n      Sign In\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n\r\nconst useStyles = makeStyles({\r\n  containerStyle: {\r\n    alignSelf: \"center\",\r\n    marginTop: 100,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { Card, CardContent, Container, makeStyles } from \"@material-ui/core\";\r\n\r\nfunction ChatMessage(props) {\r\n  const auth = firebase.auth();\r\n  const classes = useStyles();\r\n  const { text, uid, photoURL } = props.message;\r\n  const messageClass = uid === auth.currentUser.uid ? \"s\" : \"r\";\r\n  return (\r\n    <div\r\n      className={\r\n        messageClass === \"s\" ? classes.containersent : classes.containerreceived\r\n      }\r\n    >\r\n      <img src={photoURL} />\r\n      <p className={classes.textStyle}>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessage;\r\n\r\nconst useStyles = makeStyles({\r\n  containersent: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 2,\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  containerreceived: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 2,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n","import { useState, useRef } from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport firebase from \"firebase/app\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\n\r\nfunction ChatRoom() {\r\n  const classes = useStyles();\r\n  const auth = firebase.auth();\r\n  const messagesRef = firebase.firestore().collection(\"messages\");\r\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n  const [value, setValue] = useState(\"\");\r\n  const dummy = useRef();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n    await messagesRef.add({\r\n      text: value,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL,\r\n    });\r\n    setValue(\"\");\r\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages &&\r\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={dummy}></div>\r\n      </main>\r\n      <Container className={classes.containerStyle} maxWidth=\"sm\">\r\n        <form className={classes.formStyle} onSubmit={sendMessage}>\r\n          <TextField\r\n            inputProps={{ \"aria-label\": \"description\" }}\r\n            placeholder=\"Message\"\r\n            className={classes.formInput}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n          />\r\n          <Button\r\n            disabled={!value}\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n          >\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n\r\nconst useStyles = makeStyles({\r\n  containerStyle: {\r\n    bottom: 4,\r\n    paddingRight: 32,\r\n    position: \"fixed\",\r\n    padding: 2,\r\n  },\r\n  formInput: {\r\n    width: \"80%\",\r\n  },\r\n  formStyle: {\r\n    backgroundColor: \"#269dc7\",\r\n    width: \"100%\",\r\n    padding: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n","import React from \"react\";\nimport \"./App.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport SignOut from \"./components/SignOut\";\nimport SignIn from \"./components/SignIn\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport { Container, makeStyles, AppBar, Toolbar } from \"@material-ui/core\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyCg61E307_BPBImEuUF2wch2sodt7U8ISU\",\n    authDomain: \"superchatapp-52c44.firebaseapp.com\",\n    projectId: \"superchatapp-52c44\",\n    storageBucket: \"superchatapp-52c44.appspot.com\",\n    messagingSenderId: \"124997746417\",\n    appId: \"1:124997746417:web:5751c0b40e52161d5b3350\",\n    measurementId: \"G-QYTPBZN959\",\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst auth = firebase.auth();\n\nconst App = () => {\n  const [user] = useAuthState(auth);\n  const classes = useStyles();\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <AppBar position=\"fixed\" className={classes.headerStyle}>\n          <Toolbar>\n            <SignOut auth={auth} />\n          </Toolbar>\n        </AppBar>\n        <section className={user ? classes.secStyle : classes.secSignStyle}>\n          {user ? <ChatRoom /> : <SignIn signInWithGoogle={signInWithGoogle} />}\n        </section>\n      </Container>\n    </React.Fragment>\n  );\n};\nexport default App;\n\nconst useStyles = makeStyles({\n  container: {\n    padding: 5,\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n  headerStyle: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  secStyle: {\n    paddingTop: 70,\n    paddingBottom: 50,\n    backgroundColor: \"#fff\",\n  },\n  secSignStyle: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}